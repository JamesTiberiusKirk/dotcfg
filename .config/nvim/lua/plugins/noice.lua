return {
  -- {
  --   "folke/noice.nvim",
  --   event = "VeryLazy",
  --   opts = {
  --     cmdline = {
  --       backend = "popup",
  --       relative = "editor",
  --       position = {
  --         row = "100%",
  --         col = 0,
  --       },
  --       size = {
  --         height = "auto",
  --         width = "100%",
  --       },
  --       border = {
  --         style = "none",
  --       },
  --       win_options = {
  --         winhighlight = {
  --           Normal = "NoiceCmdline",
  --           IncSearch = "",
  --           Search = "",
  --         },
  --       },
  --     },
  --     lsp = {
  --       override = {
  --         ["vim.lsp.util.convert_input_to_markdown_lines"] = true,
  --         ["vim.lsp.util.stylize_markdown"] = true,
  --       },
  --     },
  --     presets = {
  --       bottom_search = true,
  --       command_palette = true,
  --       long_message_to_split = true,
  --     },
  --     popupmenu = {
  --       enabled = true, -- enables the Noice popupmenu UI
  --       ---@type 'nui'|'cmp'
  --       backend = "cmp", -- backend to use to show regular cmdline completions
  --       ---@type NoicePopupmenuItemKind|false
  --       -- Icons for completion item kinds (see defaults at noice.config.icons.kinds)
  --       kind_icons = {}, -- set to `false` to disable icons
  --     },
  --   },
  --   -- stylua: ignore
  --   keys = {
  --     { "<S-Enter>", function() require("noice").redirect(vim.fn.getcmdline()) end, mode = "c", desc = "Redirect Cmdline" },
  --     { "<leader>snl", function() require("noice").cmd("last") end, desc = "Noice Last Message" },
  --     { "<leader>snh", function() require("noice").cmd("history") end, desc = "Noice History" },
  --     { "<leader>sna", function() require("noice").cmd("all") end, desc = "Noice All" },
  --     { "<c-f>", function() if not require("noice.lsp").scroll(4) then return "<c-f>" end end, silent = true, expr = true, desc = "Scroll forward", mode = {"i", "n", "s"} },
  --     { "<c-b>", function() if not require("noice.lsp").scroll(-4) then return "<c-b>" end end, silent = true, expr = true, desc = "Scroll backward", mode = {"i", "n", "s"}},
  --   },
  -- },
}
